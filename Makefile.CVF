#Makefile for Windows
!include <dfinc.mak>   #Some definitions for Compaq Visual Fortran
gcc = cl
FC = df
#To do bounds checking (with useless reports) put "/check:all" in the
# --opt= line below (line 64, more or less ...)
#FFLAGS = /traceback /check:all
FFLAGS = /traceback /fast /nologo /warn

all:    WSJT8.EXE WSJT8codes.EXE

OBJS1 = nhash.obj init_rs.obj encode_rs.obj decode_rs.obj \
	wrapkarn.obj vit213.obj tab.obj

OBJS2C   = init_rs.o encode_rs.o decode_rs.o jtaudio.o nhash.o

F2PYONLY = ftn_init ftn_quit audio_init spec getfile azdist0 astro0

SRCS2F90 = wsjt1.f90 a2d.f90 astro0.f90 audio_init.f90 azdist0.f90 \
	decode1.f90 decode2.f90 decode3.f90 ftn_init.f90 \
	ftn_quit.f90 get_fname.f90 getfile.f90 horizspec.f90 hscroll.f90 \
	pix2d.f90 pix2d64.f90 rfile.f90 savedata.f90 spec.f90 \
	wsjtgen.f90 runqqq.f90 fivehz.f90 hash.f90 gen64.f90 thcvf.f90 \
	srcenc.f90 srcdec.f90 chenc.f90 chdec.f90 parse.f90 \
	pk30.f90 pk48.f90 pk78.f90 pkcall.f90 unpkcall.f90 \
	pkgrid.f90 unpkgrid.f90 pkpfx.f90 unpkpfx.f90 ftpeak64.f90 \
	pktext.f90 unpktext.f90 msgtrim.f90 genms.f90 geniscat.f90 \
	genjt8.f90 sec_midn.F90 pkname.f90 unpkname.f90 \
	wsjt64.f90 sync64.f90 short64.f90 flat1.f90 getsnr.f90 \
	decode64.f90 extract.f90 chkhist.f90 spec2d64.f90 \
	symsync64.f90 wsjtms.f90 ping.f90 spec2d.f90 iscat.f90 \
	jt8.f90 synciscat.f90 syncms.f90 syncjt8.f90 \
	enc416.f90 vit416.f90

SRCS2F77 = avesp2.f bzap.f spec441.f \
	indexx.f s2shape.f flat2.f packbits.f unpackbits.f \
	set.f flatten.f db.f pctile.f sort.f ssort.f ps.f \
	smooth.f sync.f demod64a.f four2a.f gencwid.f msgtype.f \
	limit.f lpf1.f morse.f nchar.f packcall.f packgrid.f \
	packtext.f fil651.f fil652.f \
	fil653.f unpackcall.f unpackgrid.f unpacktext.f \
	xfft.f astro.f azdist.f coord.f dcoord.f \
	deg2grid.f dot.f ftsky.f geocentric.f GeoDist.f grid2deg.f \
	moon2.f MoonDop.f sun.f toxyz.f 

SRCS2C   = ptt.c wrapkarn.c vit213.c tab.c

WSJT8.EXE: Audio.pyd wsjt.spec
	python c:\python23\installer\Build.py wsjt.spec
	-del WSJT8.EXE
	REN wsjt.exe WSJT8.EXE

WSJT8codes.EXE: $(OBJS1)
	$(FC) /compile_only /obj:WSJT8codes_all2.obj WSJT8codes_all2.f
	$(FC) /exe:WSJT8codes.EXE WSJT8codes_all.f90 \
	  WSJT8codes_all2.obj $(OBJS1) /link /stack:1500000


Audio.pyd: $(OBJS2C) $(SRCS2F90) $(SRCS2F77) $(SRCS2C) 
	python f2py.py -c --quiet --"fcompiler=compaqv" \
	--opt="/fpp /define:CVF" $(OBJS2C) \
	-lwinmm -lpa -lfftw3single -m Audio \
	only: $(F2PYONLY) : \
	$(SRCS2F90) $(SRCS2F77) $(SRCS2C)
	mv Audio.pyd WsjtMod/Audio.pyd
	cp WsjtMod/Audio.pyd Audio.pyd 

wsjt.spec: wsjt.py WsjtMod/astro.py WsjtMod/g.py WsjtMod/options.py \
	WsjtMod/palettes.py WsjtMod/smeter.py WsjtMod/specjt.py
	python c:\python23\installer\makespec.py --icon wsjt.ico \
	--tk --onefile wsjt.py

jtaudio.o: jtaudio.c
	$(CC) /nologo /c /DWin32 /Fojtaudio.o jtaudio.c

nhash.o: nhash.c
	$(CC) /nologo /c /DWin32 /Fonhash.o nhash.c

init_rs.obj: init_rs.c
	$(CC) /nologo /c /DBIGSYM=1 init_rs.c

init_rs.o: init_rs.c
	$(CC) /nologo /c /DBIGSYM=1 /Foinit_rs.o init_rs.c

encode_rs.obj: encode_rs.c
	$(CC) /nologo /c /DBIGSYM=1 encode_rs.c

encode_rs.o: encode_rs.c
	$(CC) /nologo /c /DBIGSYM=1 /Foencode_rs.o encode_rs.c

decode_rs.obj: decode_rs.c
	$(CC) /nologo /c /DBIGSYM=1 decode_rs.c

decode_rs.o: decode_rs.c
	$(CC) /nologo /c /DBIGSYM=1 /Ox /Zd /Fodecode_rs.o decode_rs.c

wrapkarn.obj: wrapkarn.c
	$(CC) /nologo /c /DCVF=1 wrapkarn.c

vit213.obj: vit213.c
	$(CC) /nologo /c /DCVF=1 vit213.c

vit416.obj: vit416.c
	$(CC) /nologo /c /DCVF=1 vit416.c

igray.obj: igray.c
	$(CC) /nologo /c /DCVF=1 igray.c

nhash.obj: nhash.c
	$(CC) /nologo /c /DWin32=1 /DSTDCALL=1 nhash.c

fano.o: fano.c
	$(CC) /nologo /c /Fofano.o fano.c

tab.o: tab.c
	$(CC) /nologo /c /Fotab.o tab.c

.PHONY : clean

clean:
    -del *.o *.obj wsjt8.exe wsjt.spec Audio.pyd WSJT8codes.EXE


