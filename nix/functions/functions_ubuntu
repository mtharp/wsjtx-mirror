#
# Part of the JTSDK-NIX Project
# Function Library for Ubuntu setup

#------------------------------Ubuntu Functions--------------------------------#

# make base setup_dir is it doesnt not exist
function ubuntu_setup_marker() {
	mkdir -p $_MKRD
}

# check which version we are using
function ubuntu_distro_info() {
touch $_MKRD/ubuntu.info.mkr
_DISTRIBUTOR=$(lsb_release -i |awk 'FNR==1 {print $3}')
_RELEASE=$(lsb_release -r |awk '{print $2}')
_ARCH=$(uname -m)

# ubuntu uses lsb_release 
cat > $_MKRD/ubuntu.info.mkr <<EOL
$_ARCH
$_DISTRIBUTOR
$_RELEASE
EOL
}

# package installation
function ubuntu_pkg_chk() {
touch $_TMP/install_list.txt

for line in $(< $_CFG/pkg_list_ubuntu)
do
	_STATUS=$(apt-cache policy $line |awk 'FNR==2 {print $2}')

	if [[ $_STATUS == "(none)" ]]; then 
		echo $line >> $_TMP/install_list.txt
	fi

done

}

# package installation
function ubuntu_pkg_list() {

# keep all original pkg-lists for later cat && uninstall
# for use with re-running setup, update && install packages
	if [[ -f $_MKRD/$USER-orig-pkg-list ]]; then
		mv $_MKRD/$USER-orig-pkg-list $_MKRD/$USER-orig-pkg-list-$(date +%Y-%m-%d.%H:%M)
	fi

# make new pkg list
	dpkg --get-selections > $_MKRD/$USER-orig-pkg-list

# Perform update first, *no* upgrade is performed.
# Installation approval is granted in main menu selection
	echo ".. Updating System Package Lists Before Installation"
	echo ".. Sudo is required for this action, please enter your password:"
	echo
	sudo apt-get update
	echo
	echo ".. Installing Packages for $_DISTRIBUTOR $_RELEASE $_ARCH"
	echo
	echo
	# Using -y as the user approved the package list earlier
	sudo apt-get -y install $(< $_TMP/install_list.txt)
	echo

# reset sudo to ask for user PW if needed again
	echo ".. Installation complete"
	echo ".. Changing back to normal user"
	sudo -k
	echo

# set package installation complete mkr
	touch $_MKRD/$(uname -m)_pkg_install.mkr

# keep all original post-pkg-lists for later cat && uninstall
# for use with re-running setup, update && install packages
	if [[ -f $_MKRD/$USER-post-pkg-list ]]; then
		mv $_MKRD/$USER-post-pkg-list $_MKRD/$USER-orig-pkg-list-$(date +%Y-%m-%d.%H:%M)
	fi

# now create new mkr
	dpkg --get-selections > $_MKRD/$USER-post-pkg-list

}





