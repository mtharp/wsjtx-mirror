--------------------------------------
Installation Instructions for WSPR 4.0
--------------------------------------

The following is a brief installation guide using Linux as the example. WSPR
can be built on Windows (using MinGW+MSYS / JTSDK-PY), Mac OSX 10.6/7,
and most Linux variants, provided the dependencies are met. Package names can
very considerably between distributions. Consult your package manager for the
appropriate package names.

REQUIRED DEPENDENCIES
---------------------
To compile WSPR, as a minimum, you will need the following:

	* A C/C++ and gfortran compiler
	* GNU Autotools: autoconf, make
	* Portaudio-19-dev
	* FFTW 3.3+-dev
	* Samplerate Development Library.
	* Python3.2+
	* Numeric Python (Numpy 1.8.1+), providing F2PY v2.0
	* PIL, (Python Imaging Library)
	* Python-tk (Tcl\TK 8.6.1 or Later)
	* Hamlib 1.2.15.x (or current distro verson

NOTE: Where possible, install development header packages.

Example: For Ubuntu 14.04, the following packages are required:

sudo apt-get install autoconf autotools build-essential gfortran libtool \
libtool libfftw3-dev libgfortran3:i386 libusb-dev libhamlib-dev libhamlib-utils \
libsamplerate0-dev portaudio19-dev python3-setuptools python3-dev python3-imaging \
python3-imaging-tk python3-pip python3-tk python3-numpy texinfo


INSTALL
-------
To build and install, issue the foolowing:

./autogen.sh

make && make install

The install target default is $HOME/wspr To run WSPR,

cd $HOME/wspr

python3 -O wspr.py

Additional options / methods are explained below.


INSTALL PREFIX
--------------
The default install location is $HOME/wspr. You can change the
install locaiton using the following configuration parameter:

Example:

./configure --prefix=/$HOME/testing/wspr

Note: Due to confliucting file names with "fmt", it's *not* advisable
to install WSPR to /usr/local as Coreutils also has an application
called "fmt.


NON-STANDARD LIBRARY LOCATIONS
------------------------------
The configure script will search standard Linux header and library locaitons
for FFTW3, Samplerate and Portaudio19. If it cannot locate and test the 
required packages, you will be prompted to supply the locations:

Example:

./configure --with-portaudio-lib-dir=/usr/lib/x86_64-linux-gnu
--with-portaudio-include-dir=/usr/include

Note: Provisions for Samplerate and FFTW3F also use this input method
if needed.

If used, make sure you system ldconfig has been updated to find non-standard
library or header files.

*CAUTION*

Multi-Build systems need to proceed with caution. Setting the default lib
directory if fine, as long as all the library / header files can be found for
*all* dependencies. A typical Linux system wil use /usr/lib for 32-bit and
may define /usr/lib/amd64 or /usr/ib/x86_64 or the like, but not all 
dependencies may be 64-bit, and thus, you may run into trouble finding libs if
your system does not account for this through ldconig. Consult your distribution
documentation for more information regaurding ldconfig and the various
locations where libraries are installed.


MULTI-PYTHON SYSTEMS
--------------------
On dual Python systems, you *may* need to specify Python3 and F2PY3 locations.
The configure scripts tests for both Python3 and F2PY, but if you system has
unique installation locations, the following may be helpful:

Example:

./configure PYTHON=/usr/bin/python3 F2PY=/usr/local/bin/f2py3


CONFIGURE && MAKE
-----------------
To configure or reconfigure, then build WSPR, type the following:


./autogen.sh


Note: You can re-run ./configure any time after a sucessfull ./autogen.sh run.
To see available configure options, type:

./configure --help


RUN WPSR
--------
To run WSPR after build, cd to ../wspr and:

python3 -O wspr.py

Note: If your default python is python3, and called by issuing python,
then change to:

python -O wspr.py


MAKE INSTALL
------------
This target install WSPR to the ${PREFIX} location specified by the user.
If --prefix= was not changed, the default installation directory is
$HOME/wspr:

make install


CLEAN THE BUILD TREE
--------------------
This target removes files generated during make.

make clean


CLEAN FOR DISTRIBUTION
----------------------
This target removes most all of the build files, (configure script, Makfile)
and so on. This will also remove files generated from wspr0 and fmt.

make distclean


UNINSTALL
---------
The make script has a provision to uninstall WSPR. It serves the same function
as simply deleting the ../wspr folder. The delete location is specified in
the Makefile, based on the users input. To tun uninstall:

make uninstall


BASIC MAC OSX INSTALLATION INSTUCTIONS (Example 10.7)
-----------------------------------------------------

You need to be familiar with command line operations using
the Terminal window and with downloading and installing
libraries.

Apple provide python 2.x as part of the system but this must
be upgraded to python 3.4.  Use pip3.4 to install numpy, 
Pillow and Pmw.   Follow installation guides from 
www.python.org.  Python3.4 will be installed in
/Library/Frameworks/Python.framework/

It is important that references to python should then be
to python3.4 and not the earlier version of python.  Watch
out for Apple's use of soft links to the earlier versions
found in /System/Library/Frameworks/Python.framework. These
should be disabled.

You will also need portaudio v19 as well as fftw libraries
from www.portaudio.org and www.fftw.org respectively.  

Then, in the wspr directory:

configure --with-portaudio-include-dir=/usr/local/include \
  --with-portaudio-lib-dir=/usr/local/lib

Check the new Makefile carefully to see that the correct
references to python3.4 and the new f2py are made. Then

   make

You might have to move Audio.so to WsjtMod manually.

Thereafter     python wspr.py   should execute.

Additional guidance from  g4kla at rmnjmn.demon.co.uk




