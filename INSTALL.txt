-------------------------------------------------
Build and Installation Instructions for WSPR 4.0
-------------------------------------------------

The following outlines basic installation instructions for Linux and Mac.


REQUIRED DEPENDENCIES
---------------------
To compile WSPR, you will need the following packages / applications:

	* A C/C++ and Fortran compiler
	* GNU Autotools: autoconf, make, autotools-dev (config.guess, config.sub, install.sh)
	* Portaudio-19-dev
	* FFTW 3.3+-dev (only libraries *.so are required)
	* Samplerate Development Library.
	* Python3.2+
	* Numeric Python (Numpy 1.8.1+), providing F2PY v2.0 built against Python3
	* PIL, (Python Imaging Library, sometimes referred to as PILLOW)
	* Python-tk (Tcl\TK 8.6.1 or Later)
	* Python Imaging, Tk Dependant
	* Optional: Hamlib 1.2.15.x (or current distro version) for rig control

Example: For Ubuntu 14.04 amd64 system install, the following packages
would make be a good start:

sudo apt-get -y install autoconf autotools-dev build-essential gfortran libtool
libfftw3-dev libusb-dev libhamlib-dev libhamlib-utils libsamplerate0-dev
portaudio19-dev python3-dev python3-tk python3-pil python3-pil.imagetk 
python3-imaging-tk python3-pip python3-numpy

NOTES:
 [1] Python Imaging (Pil), Python3 Imgaging Tk dependant and the related package
names can be tricky depending your version of *Nix. For example, python3-imaging-tk
installs / sets up the Python Imaging Library (Pillow, a modified version of PIL).
Your Linux distro may be different, but to be safe, install them both.

 [2] You may be able to slim the list down by selective installation, but the above
provides a solid base to start with.

 [3] Portaudio is a packages that can cause problems on various distrobutions
like Mac OSX, FreeBSD etc, as they have portaudio v18 instaled by default, and
you must like against v19, so follow the instructions in the respective setion.

IMPORTANT F2PY NOTE
- If you have python-numpy (based on Python27) installed, you should remove
it unless it is needed for other Numeric Python applications, as WSPR requires
F2PY (provided by Numpy) to be built with Python3:

sudo apt-get remove python-numpy
sudo apt-get install python3-numpy

See MULTI PYTHON SYSTEMS for more information.


INSTALL
-------
To build and install, issue the following:

./autogen.sh

make && sudo make install


RUN WSPR
--------
To run WSPR after build, type:

 wspr


NON-STANDARD LIBRARY LOCATIONS
------------------------------
The configure script will search standard Linux header and library locations
for FFTW3, Samplerate and Portaudio19. If it cannot locate and test the 
required packages, you will be prompted to supply the locations:

Example - (header location):

./configure CPPFLAGS="-I$HOME/test/portaudio/include"

Note the " .. " for parameter expansion for $HOME


Example - (library location):
./configure LIBDIR='-L/home/user-name/test/portaudio/lib'

Note ' .. ' no parameter expansion will occur

NOTE: When using CPPFLAGS or LIBDIR, use absolute paths, for example:

-I/home/$USER/test/portaudio/include *not* ==> ~/test/portaudio/include

or

-L$HOME/test/portaudio/lib *not* ==> ~/test/portaudio/lib


MULTI PYTHON SYSTEMS
--------------------
On dual Python systems, you *may* need to specify Python3 and F2PY3 locations.
The configure scripts tests for both Python3 and F2PY, but if your system has
unique install locations, the following may be helpful:

Example:
./configure --with-python3='/usr/bin/python3' --with-f2py='/usr/local/bin/f2py3'

Note:
- If you build a custom Python3x, make sure you include PIL, TK and Numpy
(which provides F2PY).

- If your default Python installation is Python3, after running ./autogen.sh,
you will see:

F2py: ............: /usr/bin/f2py

This "OK", as long as Numpy (F2PY) was built using Python3. The same goes for
Python itself. The configure script may print:

Python3: .........: /usr/bin/python

Yes the actual version is something like Python 3.3 or 3.4. This is also "OK"
as the Numpy installation will also be based on on Python3. 


CONFIGURE && MAKE
-----------------
To configure or reconfigure, then build WSPR, type the following:


./autogen.sh


Note: You can re-run ./configure any time after a successful ./autogen.sh run.
To see available configure options, type:

./configure --help=short

Note the use of --help=short, as that will list the configurable options
which are enabled in configure.ac


MAKE INSTALL
------------
This target install WSPR to the ${PREFIX} location specified by the user.
If --prefix= was not changed, the default installation directory is
$HOME/.wspr:

sudo make install


CLEAN THE BUILD TREE
--------------------
This target removes files generated during make.

make clean


CLEAN FOR DISTRIBUTION
----------------------
This target removes most all of the build files, (configure script, Makefile)
and so on. This will also remove files generated from wspr0 and fmt.

make distclean


UNINSTALL
---------
The make script has a provision to uninstall WSPR. It serves the same function
as simply deleting the ../wspr folder. The delete location is specified in
the Makefile, based on the users input. To tun uninstall:

sudo make uninstall

Note: All user generated files (WSPR.INI, decodes, fmt.ini, etc) remain in the
installation directory, unless you specifically delete them.


MAKE DIST
---------
Included in the WSPR repository is a filed named  wspr-dist.sh. This files is
used to generate distribution tar ball, or tar.gz files.

USAGE: wspr-dist.sh [NAME] [VERSION]
 
Example 1 cmd line: ./wspr-dist.sh wspr 4.0
Example 2 Makefile: make dist

Generates .......: wspr-4.0.tar.gz
File Location ...: $(src-path)/wspr/dist


BASIC MAC OSX INSTALLATION INSTRUCTIONS (Example 10.7)
-----------------------------------------------------

You need to be familiar with command line operations using
the Terminal window and with downloading and installing
libraries.

Apple provide python 2.x as part of the system but this must
be upgraded to python 3.4.  Use pip3.4 to install numpy, 
Pillow.   Follow installation guides from www.python.org.
Python3.4 will be installed in /Library/Frameworks/Python.framework/

NOTE: Pmw is no longer a required approbate Pmw files have been added
to the WSPR repository.

It is important that references to python should then be
to python3.4 and not the earlier version of python.  Watch
out for Apple's use of soft links to the earlier versions
found in /System/Library/Frameworks/Python.framework. These
should be disabled.

You will also need portaudio v19 as well as fftw libraries
from www.portaudio.org and www.fftw.org respectively.  

Then, in the wspr directory:

Example - (library location):
./configure LIBDIR='-L/home/user-name/test/portaudio/lib'

Note ' .. ' no parameter expansion needed

NOTE: When using CPPFLAGS, use absolute paths, for example:

-I/home/$USER/test/portaudio/include *not* ==> ~/test/portaudio/include


Check the new Makefile carefully to see that the correct
references to python3.4 and the new f2py are made. Then

   make

You might have to move Audio.so or w.so to WsprMod/ manually.

Thereafter  python wspr.py  should execute.

Additional guidance from  g4kla at rmnjmn.demon.co.uk

