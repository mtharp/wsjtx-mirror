MV ?= mv
MKDIR ?= mkdir
INSTALL=	install
CC ?= @CC@
FFLAGS	= @FFLAGS@
LDFLAGS	= @LDFLAGS@
LIBS	= @LIBS@ -lfftw3f
CPPFLAGS = @CPPFLAGS@
CFLAGS	= @CFLAGS@
PREFIX	= @PREFIX@
# ${CFLAGS}# WSPR specific C flags
CFLAGS	+= -DBIGSYM=1 -fPIC
DEFS = @DEFS@
CFLAGS += ${DEFS}
CPPFLAGS += ${DEFS} -I.

# WSPR specific Fortran flags
FFLAGS += -fbounds-check

all:	wspr
build:	wspr

wspr:	WsprMod/w.so

# Default rules
%.o: %.c
	${CC} ${CPPFLAGS} ${CFLAGS} -c $<
%.o: %.f
	${FC} ${CPPFLAGS} ${FFLAGS} -c $<
%.o: %.F
	${FC} ${CPPFLAGS} ${FFLAGS} -c $<
%.o: %.f90
	${FC} ${CPPFLAGS} ${FFLAGS} -c $<
%.o: %.F90
	${FC} ${CPPFLAGS} ${FFLAGS} -c $<

OS=@OS@
FC=@FC@
FCV=@FCV@
FC_LIB_PATH	+= @FC_LIB_PATH@

LDFLAGS	+= -L${FC_LIB_PATH}

PYTHON	?= @PYTHON@
RM	?= @RM@
F2PY	= @F2PY@

F2PYONLY = wspr1 getfile paterminate audiodev

SRCS2F90 = wspr1.F90 wspr2.F90 decode.F90 getutc.f90 gran.f90 rx.F90 \
	startdec.F90 startrx.F90 starttx.F90 tx.F90 getfile.F90 \
	paterminate.f90 wqencode.f90 chklevel.F90 genwspr.f90 \
	wqdecode.f90 hash.f90 packname.f90 packtext2.f90 \
	unpackname.f90 unpacktext2.f90 audiodev.f90 \
	packpfx.f90 packprop.f90 unpackpfx.f90 unpackprop.f90 \


OBJS2F90 = ${SRCS2F90:.f90=.o}

SRCS2F77 = mept162.F getrms.f wfile5.F mix162.f \
	sync162.f decode162.f spec162.F set.f xfft.f \
	ps162.f pctile.f xcor162.f peakup.f db.f \
	inter_mept.f fano232.f unpack50.f unpackcall.f \
	unpackgrid.f four2a.f flat3.f sort.f deg2grid.f \
	ssort.f gencwid.f morse.f \
	packcall.f packgrid.f pack50.f encode232.f \
	nchar.f grid2deg.f \
	fchisq.f ccf2.f twkfreq.f azdist.f geodist.f

OBJS2F77 = ${SRCS2F77:.f=.o} deep65.o

SRCS2C = padevsub.c start_threads.c sound.c gmtime2.c ptt_unix.c nhash.c
OBJS2C  = ${SRCS2C:.c=.o}

WsprMod/w.so:	${OBJS2C} $(SRCS2F90) $(SRCS2F77) acom1.f90
	${F2PY} -c --quiet --noopt --debug -m w \
	--f77flags="${FFLAGS}" --f90flags="${FFLAGS}" \
	--fcompiler=${FCV} --f77exec=${FC} --f90exec=${FC} \
	--opt="-fbounds-check ${FFLAGS}" \
	${CPPFLAGS} ${LDFLAGS} ${LIBS} \
	only: $(F2PYONLY) : \
	$(SRCS2F90) $(SRCS2F77) $(SRCS2C)
	${MKDIR} -p build/lib/WsprMod
	${MV} w.so WsprMod/w.so

sound.o: sound.c
	$(CC) -c sound.c
wspr_rxtest.o: wspr_rxtest.f90
	$(FC) -c $(FFLAGS) wspr_rxtest.f90

install: WsprMod/w.so
	${RM} -rf build/
	${PYTHON} setup.py install
	${INSTALL} wspr ${PREFIX}/bin

deb: wspr.py WsprMod/w.so WsprMod/g.py WsprMod/__init__.py \
	WsprMod/options.py WsprMod/palettes.py WsprMod/PmwBlt.py \
	WsprMod/PmwColor.py WsprMod/Pmw.py DEB/DEBIAN/control \
	supported_rigs.txt wsprrc DEB/WSPR/wspr
	cp wspr.py supported_rigs.txt wsprrc DEB/WSPR
	cp WsprMod/w.so DEB/WSPR/WsprMod
	cp WsprMod/*.py DEB/WSPR/WsprMod
	dpkg-deb --build DEB wspr_ver_rev_i386.deb

.PHONY : clean
clean:
	${RM} -f *.o *.pyc *.pyo WsprMod/*.pyc WsprMod/*.pyo WsprMod/w.so \
		WsprMod/*.so wspr_rxtest w.so *~
	${RM} -rf build/

distclean:
	${RM} -f config.log config.status Makefile
