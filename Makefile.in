# Makefile for Linux
# Re-direct stdout and stderr:	bash
#				make >& junk
# Prerequisites: Python 3.x, numpy-1.8.1, PIL, Pmw-2.0.0+

PROGRAM		:=	@PROGRAM@
VERSION		:=	@VERSION@
OS		:=	@OS@
MV		:=	@MV@
RM		:=	@RM@
CP		:=	@CP@
MKDIR		:=	@MKDIR@
PREFIX		:=	@PREFIX@

CC		:=	@CC@
FC		:=	@FC@
FCV		:=	@FCV@
FC_LIB_PATH	+=	@FC_LIB_PATH@

PYTHON		:=	@PYTHON@
F2PY		:=	@F2PY@

# Libs and Flags
LIBS		:=	@LIBS@
CPPFLAGS	+=	${DEFS} -DVERSION=\"$(VERSION)\" -DPROGRAM=\"$(PROGRAM)\"
LDFLAGS		+=	@LDFLAGS@

# OS Specific Vars
ifeq (${host_os},*darwin*)
	MVSO	= ${MV} w.so WsprMod/w.so
	CFLAGS	+= -Wall -O0 -fPIC -m64
	FFLAGS	+= -O2 -Wall -fbounds-check -fno-second-underscore \
	-Wno-conversion -Wno-character-truncation -fPIC -m64
else
	MVSO	= ${MV} w*.so WsprMod/w.so
	CFLAGS	+= -fPIC
	FFLAGS	+= -O2 -Wall -fbounds-check -fno-second-underscore \
	-Wno-conversion -Wno-character-truncation -fPIC
endif

DEFS		:=	@DEFS@

# WSPR Targets
all:	libwspr.a thnix.o WsprMod/w.so fmt fmtave fcal fmeasure wsprcode wspr0
	@echo ""
	@echo "---------------------------------------------"
	@echo "${PROGRAM} ${VERSION} Make Summary"
	@echo "---------------------------------------------"
	@echo ""	
	@echo " To Run, type .........: @PYTHON@ -O wspr.py"
	@echo " To Install, type .....: make install"
	@echo " Install Location .....: @PREFIX@"
	@echo ""
	@echo " Clean & Rebuild"
	@echo " To Clean, type .......: make clean"
	@echo " To Dist Clean, type ..: make distclean"
	@echo ""

# Default rules
%.o: %.c
	${CC} ${CPPFLAGS} ${CFLAGS} -c $<
%.o: %.f
	${FC} ${FFLAGS} -c $<
%.o: %.F
	${FC} ${FFLAGS} -c $<
%.o: %.f90
	${FC} ${FFLAGS} -c $<
%.o: %.F90
	${FC} ${FFLAGS} -c $<

OBJS1 = wspr0.o wspr0init.o wspr0_rx.o wspr0_tx.o thnix_stub.o

wspr0:  ${OBJS1}
	${FC} ${FFLAGS} -o wspr0 ${FFLAGS} ${OBJS1} libwspr.a -pthread -lfftw3f -lportaudio

wsprcode: wsprcode.o thnix_stub.o
	${FC} -o wsprcode wsprcode.o thnix_stub.o libwspr.a -pthread

OBJS3 = azdist.o ccf2.o chklevel.o db.o decode.o decode162.o deg2grid.o \
	encode232.o fano232.o fchisq.o fil1.o flat3.o four2a.o\
	fthread.o gencwid.o genmept.o genwspr.o geodist.o getrms.o getutc.o \
	gmtime2.o gran.o grid2deg.o hash.o inter_mept.o iqdemod.o \
	mept162.o mix162.o morse.o msgtrim.o nchar.o nhash.o pack50.o \
	packcall.o packgrid.o packname.o packpfx.o packprop.o packtext2.o \
	padevsub.o pctile.o peakup.o phasetx.o ps162.o ptt_unix.o rx.o \
	rxtxcoord.o set.o sort.o sound.o spec162.o speciq.o ssort.o \
	start_threads.o startdec.o startrx.o starttx.o sync162.o \
	twkfreq.o tx.o unpack50.o unpackcall.o unpackgrid.o \
	unpackname.o unpackpfx.o unpackprop.o unpacktext2.o wfile5.o \
	wqdecode.o wqencode.o wspr2.o xcor162.o xfft.o 

# Build the library libwspr.a
libwspr.a: ${OBJS3} acom1.f90 acom2.f90
	ar cr libwspr.a ${OBJS3}
	ranlib libwspr.a

# Build FMT Applications
fmt: fmt.f90 libwspr.a
	${FC} -o fmt fmt.f90 libwspr.a -pthread -lfftw3f -lportaudio

fmtave: fmtave.f90
	${FC} -o fmtave fmtave.f90

fcal: fcal.f90
	${FC} -o fcal fcal.f90

fmeasure: fmeasure.f90
	${FC} -o fmeasure fmeasure.f90

# SRC for w.so
F2PYSRCS = wspr1.f90 getfile.f90 paterminate.f90 audiodev.f90

# Build W.SO & MV to WsprMod then CP to WsprMosNoGui
WsprMod/w.so:	libwspr.a ${F2PYSRCS} acom1.f90 
	${F2PY} -c -I. --fcompiler=gnu95 --f77exec=gfortran --f90exec=gfortran \
	--opt="-cpp -fbounds-check -O2" thnix.o ${LDFLAGS} ${LIBS} libwspr.a \
	-m w ${F2PYSRCS}
	${MVSO}
	cp WsprMod/w.so WsprModNoGui/w.so

# Install to $HOME/wpsr
install:
	@clear
	@echo "-----------------------------------"
	@echo "        Installing WSPR"
	@echo "-----------------------------------"
	@echo ""
	@${MKDIR} -p ${PREFIX}
	@${CP} -r doc/ save/ WsprMod/ WsprModNoGui/ ${PREFIX}
	@${CP} -r ./fcal ./fmeasure ./fmt ./fmtave \
	./wspr0 ./wsprcode ./gocal ./hamlib_rig* ./Pmw*.py \
	./tkrep.py ./wspr_nogui.py ./wspr.py ${PREFIX}
	@echo "Finished Installing WSPR."
	@echo ""
	@echo "To run WSPR ..: cd ${PREFIX}"
	@echo "Then type, ...: @PYTHON@ -O wspr.py"
	@echo ""

# Uninstall / Delete $HOME/wspr directory
uninstall:
	@echo ""
	@echo "** WARNING **, this will delete the WSPR directory."
	@echo "Make sure you have saved all the files you wish"
	@echo "to keep (WSPR.INI, fcal.out, decodes etc.)."
	@echo ""
	@read -p 'Delete WSPR Directory? (y/n)' REPLY; \
	[ $$REPLY = "y" ] || [ $$REPLY = "Y" ]; then \
	${RM} -r ${PREFIX}; \
	fi

.PHONY: clean distclean
clean :
	${RM} -f *.o libwspr.a *.pyc *.pyo WsprMod/*.pyc WsprMod/*.pyo \
	WsprMod/w.so WsprMod/*.so w.so *~ wsprcode fmt fmtave fcal \
	fmeasure wspr0 WsprModNoGui/w.so
	${RM} -rf build/

distclean :
	${RM} -f config.log config.status Makefile ALL_WSPR.TXT WSPR.INI \
	audio_caps autoscan.log configure.scan decoded.txt hopping.ini \
	fmt.ini fmt.all fmt.dat fcal.plt fmtave.out fmtave.out fmt.out fcal.out \
	pixmap.dat wspr.log configure WsprModNoGui/w.so
	${RM} -rf ./autom4* ./__pycache__
