# Makefile for Linux
# Re-direct stdout and stderr:		bash
#								make >& junk
#
# Prerequisites: Python 3.x, numpy-1.8.1+, PIL, Portaudio, Samplerate, FFTW

# Program Infomation
PROGRAM		:=	@PROGRAM@
VERSION		:=	@VERSION@
COPYRIGHT	:=	@COPYRIGHT@
BUGS		:=	@BUGS@
WEB         :=	@WEB@

# System Information
OS			:=	@OS@
CPU			:=	@CPU@

# General Use Tools
AR			:=	@AR@
CP			:=	@CP@
LN			:=	@LN@
MV			:=	@MV@
RM			:=	@RM@
CHOWN		:=	@CHOWN@
CHMOD		:=	@CHMOD@
SHELL		:=	@SHELL@
MKDIR		:=	@MKDIR@

# Install locations
INSTALL		:=	install
BINDIR		:=	@BINDIR@
DOCDIR		:=	@DOCDIR@
HOMEDIR		:=	@HOMEDIR@
MANDIR		:=	@MANDIR@
SHARED		:=	@SHARED@
WSPRLIB		:=	@WSPRLIB@

# Compiler Information
CC			:=	@CC@
FC			:=	@FC@
FCV			:=	@FCV@
FC_LIB_PATH	+=	@FC_LIB_PATH@

# Python Information
PYTHON		:=	@PYTHON@
F2PY		:=	@F2PY@

# Libs and Flags
LIBS		:=	@LIBS@
LIBDIR      +=	@LIBDIR@
CPPFLAGS	+=	${DEFS}
CFLAGS		+=	@CFLAGS@
FFLAGS		+=	@FFLAGS@
LDFLAGS		+=	@LDFLAGS@
FCOPT		+=	@FCOPT@
PORTAUDIO_INCLUDE = 	@PORTAUDIO_INCLUDE@
PORTAUDIO_LIBDIR =	@PORTAUDIO_LIBDIR@

# For Manpages
A2X			:=	@A2X@
MANPSRC		:= $(wildcard manpages/*.1.txt)

# For User Guide
DOCSRC		:=	@DOCSRC@
STYLEDIR	:=	@STYLEDIR@
ASCIIDOC	:=	@ASCIIDOC@
DOCOPT		+=	-b xhtml11 -a data-uri

# Config Definitions
DEFS		:=	@DEFS@

# WSPR Targets
all:	libwspr.a WsprMod/w.so fmtest fmtave fcal fmeasure wsprcode wspr0 manp
	@echo ''
	@echo '---------------------------------------------'
	@echo " ${PROGRAM} ${VERSION} Make Summary"
	@echo '---------------------------------------------'
	@echo ''	
	@echo " To Install ${PROGRAM}"
	@echo '  Type .........: sudo make install'
	@echo '  Then, type ...: wspr'
	@echo ''
	@echo ' Clean & Rebuild'
	@echo '  To Clean, type .......: make clean'
	@echo '  To Dist Clean, type ..: make distclean'
	@echo ''

# Default Rules
%.o: %.c
	${CC} ${PORTAUDIO_INCLUDE} ${CFLAGS} ${CPPFLAGS} -c $<
%.o: %.f
	${FC} ${PORTAUDIO_INCLUDE} ${CFLAGS} ${FFLAGS} -c $<
%.o: %.F
	${FC} ${PORTAUDIO_INCLUDE} ${CFLAGS} ${FFLAGS} -c $<
%.o: %.f90
	${FC} ${PORTAUDIO_INCLUDE} ${CFLAGS} ${FFLAGS} -c $<
%.o: %.F90
	${FC} ${PORTAUDIO_INCLUDE} ${CFLAGS} ${FFLAGS} -c $<

# Prevent compiler warnings ( r4142 commit )
thnix_stub.o: thnix_stub.f90
	@echo
	@echo Build thnix_stub
	@echo --------------------
	${FC} -c thnix_stub.f90

# Objects
OBJS1 = wspr0.o wspr0init.o wspr0_rx.o wspr0_tx.o thnix_stub.o

wspr0:  ${OBJS1}
	@echo
	@echo Build wspr0
	@echo --------------------
	${FC} ${PORTAUDIO_LIBDIR} ${FFLAGS} -o wspr0 ${FFLAGS} ${LDFLAGS} ${OBJS1} libwspr.a -lfftw3f -lportaudio

wsprcode: wsprcode.o thnix_stub.o
	@echo
	@echo Build wsprcode
	@echo --------------------
	${FC} ${FFLAGS} ${LDFLAGS} -o wsprcode wsprcode.o thnix_stub.o libwspr.a -pthread

OBJS3 = azdist.o ccf2.o chklevel.o db.o decode.o decode162.o deg2grid.o \
	encode232.o fano232.o fchisq.o fil1.o flat3.o four2a.o\
	fthread.o gencwid.o genmept.o genwspr.o geodist.o getrms.o getutc.o \
	gmtime2.o gran.o grid2deg.o hash.o inter_mept.o iqdemod.o \
	mept162.o mix162.o morse.o msgtrim.o nchar.o nhash.o pack50.o \
	packcall.o packgrid.o packname.o packpfx.o packprop.o packtext2.o \
	padevsub.o pctile.o peakup.o phasetx.o ps162.o ptt_unix.o rx.o \
	rxtxcoord.o set.o sort.o sound.o spec162.o speciq.o ssort.o \
	start_threads.o startdec.o startrx.o starttx.o sync162.o \
	twkfreq.o tx.o thnix.o unpack50.o unpackcall.o unpackgrid.o \
	unpackname.o unpackpfx.o unpackprop.o unpacktext2.o wfile5.o \
	wqdecode.o wqencode.o wspr2.o xcor162.o xfft.o 

# Build Library: libwspr.a
libwspr.a: ${OBJS3} acom1.f90 acom2.f90
	@echo
	@echo Build libwspr library
	@echo -----------------------------
	${AR} cr libwspr.a ${OBJS3}
	ranlib libwspr.a

# Build FMT Applications
fmtest: fmtest.f90 libwspr.a
	@echo
	@echo Build Fmtest
	@echo --------------------
	${FC} ${CFLAGS} ${FFLAGS} ${PORTAUDIO_LIBDIR} ${LDFLAGS} -o fmtest fmtest.f90 libwspr.a -lfftw3f -lportaudio

fmtave: fmtave.f90
	@echo
	@echo Build Fmtave
	@echo --------------------
	${FC} ${PORTAUDIO_INCLUDE} ${CFLAGS} ${FFLAGS} ${PORTAUDIO_LIBDIR} ${LDFLAGS} -o fmtave fmtave.f90

fcal: fcal.f90
	@echo
	@echo Build Fcal
	@echo --------------------
	${FC} ${PORTAUDIO_INCLUDE} ${CFLAGS} ${FFLAGS} ${PORTAUDIO_LIBDIR} ${LDFLAGS} -o fcal fcal.f90

fmeasure: fmeasure.f90
	@echo
	@echo Build Fmeasure
	@echo --------------------
	${FC} ${FFLAGS} ${LDFLAGS} -o fmeasure fmeasure.f90

# SRC for w.so
F2PYSRCS = wspr1.f90 getfile.f90 paterminate.f90 audiodev.f90

# Build W.SO & MV to WsprMod/
WsprMod/w.so:	libwspr.a ${F2PYSRCS} acom1.f90
	@echo
	@echo RUN F2PY w.so
	@echo --------------------
	${F2PY} -c --quiet --fcompiler=${FCV} --f77exec=${FC} --f90exec=${FC} \
	--opt="${FCOPT}" thnix.o ${PORTAUDIO_LIBDIR} ${LDFLAGS} ${LIBS} libwspr.a -m w ${F2PYSRCS}
	${MV} w*.so WsprMod/w.so

# Generate Manpages
manp:
	@echo
	@echo Generating Manpages
	@echo --------------------
	@for f in $(MANPSRC) ; do \
	echo "$$f" ; \
	$(A2X) --doctype manpage --format manpage --no-xmllint $$f ; \
	done

# Generate User Guide
user-guide:
	@echo
	@echo Generating User-Guide
	@echo ---------------------
	(cd doc/user_guide ; $(ASCIIDOC) $(DOCOPT) -b xhtml11 -a data-uri -a toc2 -o wspr-main-@VERSION@.html $(DOCSRC)/wspr-main.adoc)

# Install target wspr
install:
	@clear
	@echo '-----------------------------------'
	@echo " Installing ${PROGRAM}"
	@echo '-----------------------------------'
	@echo '..Creating Directories'
	@${MKDIR} -p ${DESTDIR}${BINDIR}
	@${MKDIR} -p ${DESTDIR}${MANDIR}
	@${MKDIR} -p ${DESTDIR}${DOCDIR}/examples
	@${MKDIR} -p ${DESTDIR}${SHARED}
	@${MKDIR} -p ${DESTDIR}${SHARED}/save/Samples
	@${MKDIR} -p ${DESTDIR}${WSPRLIB}/WsprMod
	@${MKDIR} -p ${DESTDIR}${SHARED}/../applications
	@${MKDIR} -p ${DESTDIR}${SHARED}/../pixmaps
	@echo '..Installing Binaries'
	@install -m 755 fmtest fcal fmeasure fmtave wspr0 wsprcode ${DESTDIR}${BINDIR}
	@strip	${DESTDIR}${BINDIR}/fmtest ${DESTDIR}${BINDIR}/fcal \
		${DESTDIR}${BINDIR}/fmeasure ${DESTDIR}${BINDIR}/fmtave \
		${DESTDIR}${BINDIR}/wspr0 ${DESTDIR}${BINDIR}/wsprcode
	@${CP}	 wspr.sh ${DESTDIR}${BINDIR}/wspr
	@${CHMOD} 755 ${DESTDIR}${BINDIR}/wspr
	@echo '..Installing WsprMod'
	@install -m 755 WsprMod/* ${DESTDIR}${WSPRLIB}/WsprMod
	@echo '..Installing Manpages'
	@install -m 644 manpages/*.1 ${DESTDIR}${MANDIR}
	@echo '..Installing Sample Files'
	@install -m 644 save/Samples/* ${DESTDIR}${SHARED}/save/Samples/
	@install -m 755 gocal Pmw*.py wspr.py wspr.sh wsprrc ${DESTDIR}${SHARED}
	@echo '..Installing Shared Documents'
	@install -m 644 AUTHORS	README NEWS COPYING COPYRIGHT ${DESTDIR}${DOCDIR}
	@${CP} -r doc/examples/* ${DESTDIR}${DOCDIR}/examples/
	@${CHMOD} -R 644 ${DESTDIR}${DOCDIR}/examples/*
	@install -m 644 hamlib_rig* ${DESTDIR}${SHARED}
	@install -m 644 wspr.desktop ${DESTDIR}${SHARED}/../applications
	@install -m 644 wspr.desktop ${DESTDIR}${SHARED}/applications
	@install -m 644 wspr.xpm ${DESTDIR}${SHARED}/../pixmaps/
	@echo ''
	@echo "Finished Installing ${PROGRAM}"
	@echo 'To run, type..: wspr'
	@echo ''

# Uninstall system files
uninstall:
	@clear
	@echo '--------------------------------------'
	@echo " Uninstalling ${PROGRAM}"
	@echo '--------------------------------------'
	@echo '..Removing Installed files'
	@${RM} -r ${SHARED}
	@${RM} -r ${WSPRLIB}
	@${RM} -r ${DOCDIR}
	@${RM} -f ${BINDIR}/{fmtest,fcal,fmeasure,fmtave,wsprcode wspr}
	@${RM} -f ${MANDIR}/{wspr.1,fmtest.1,fmtave.1,fmeasure.1,fcal.1,wsprcode.1}
	@${RM} -f ${HOMEDIR}/{fmtest,fcal,fmeasure,fmtave,wspr0,wsprcode}
	@${RM} -rf ${HOMEDIR}/{WsprMod/,examples/,save/,doc/,*.py,hamlib*,*.sh,*.dat,wsprrc,gocal,*cache*}
	@${RM} -rf ${HOMEDIR}/{AUTHORS,README,NEWS,COPYING,COPYRIGHT}
	@${RM} -f ${SHARED}/../applications/wspr.desktop
	@${RM} -f ${SHARED}/../pixmaps/wspr.xpm
	@echo "..User files remain in: ${HOMEDIR}"
	@echo "..To remove, type ....: rm -R ${HOMEDIR}"
	@echo ''

# Cleanup Source Tree
.PHONY: clean distclean dist
clean :
	${RM} -f *.o libwspr.a *.pyc *.pyo WsprMod/*.pyc WsprMod/*.pyo \
	WsprMod/w.so WsprMod/*.so w.so *~ wsprcode wspr0 fmtest fmtave fcal \
	fmeasure wspr.sh
	${RM} -f manpages/*.1

distclean: clean
	${RM} -f config.log config.status ALL_WSPR*.TXT WSPR.INI \
	audio_caps autoscan.log configure.scan decoded.txt hopping.ini \
	fmt.ini fmt.all fmt.dat fcal.plt fmtave.out fmtave.out fmt.out fcal.out \
	pixmap.dat wspr.log configure Makefile
	${RM} -rf ./autom4* WsprMod/__pycache__ ./dist
	${RM} -r manpages/*.txt

dist: distclean
	${SHELL} ./wspr-dist.sh @PROGRAM@ @VERSION@
