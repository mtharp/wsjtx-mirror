# PyFMT Makefile for Linux
# Re-direct stdout and stderr:		bash
#								make >& junk
#
# Prerequisites:	Python3 or Python2, AsciiDoctor, Portaudio, FFTW
#					PySerial, PyAudio, Pmw

# Program Infomation
PROGRAM		:=	@PROGRAM@
VERSION		:=	@VERSION@
COPYRIGHT	:=	@COPYRIGHT@
BUGS		:=	@BUGS@
WEB         :=	@WEB@

# System Information
OS			:=	@OS@
CPU			:=	@CPU@

# General Use Tools
AR			:=	@AR@
ECHO		:=	@ECHO@
CHMOD		:=	@CHMOD@
CHOWN		:=	@CHOWN@
CP			:=	@CP@
LN			:=	@LN@
MKDIR		:=	@MKDIR@ -p
MV			:=	@MV@
RM			:=	@RM@
SHELL		:=	@SHELL@

# Install Locations
INSTALL		:=	install
BINDIR		:=	@BINDIR@
DOCDIR		:=	@DOCDIR@
HOMEDIR		:=	@HOMEDIR@
LOGNAME		:=	@LOGNAME@
MANDIR		:=	@MANDIR@
PREFIX		:=	@PREFIX@
PYFMTLIB	:=	@PYFMTLIB@
RIGCTL		:=	@RIGCTL@
SHARED		:=	@SHARED@

# Compiler Information
CC			:=	@CC@
FC			:=	@FC@
FCV			:=	@FCV@
FC_LIB_PATH	+=	@FC_LIB_PATH@

# Python and PMW Information
PYTHON		:=	@PYTHON@
PMW3		:=	@PMW3@

# Libs and Flags
LIBS		:=	@LIBS@
LIBDIR      +=	@LIBDIR@
CPPFLAGS	+=	${DEFS}
CFLAGS		+=	@CFLAGS@
FFLAGS		+=	@FFLAGS@
LDFLAGS		+=	@LDFLAGS@
FCOPT		+=	@FCOPT@
PORTAUDIO_INCLUDE = 	@PORTAUDIO_INCLUDE@
PORTAUDIO_LIBDIR =	@PORTAUDIO_LIBDIR@

# For Manpages ( Uses Asciidoctor )
BMANP		:=	@BMANP@
MANPSRC		:= $(wildcard manpages/*.1.txt)
APPSRC		:= $(./fmtest,fcal,fmeasure,fmtave)

# For User Guide ( Uses Asciidoctor )
ASCIIDOCTOR	:=	@ASCIIDOCTOR@
BDOC		:=	@BDOC@
DOCSRC		:=	@DOCSRC@
DOCCONF		:=	@DOCCONF@
DOCPATH		:=	@DOCPATH@
THEMEDIR	:=	@THEMEDIR@

# Config Definitions
DEFS		:=	@DEFS@

# Default Rules
%.o: %.c
	$(CC) $(PORTAUDIO_INCLUDE) $(CFLAGS) $(CPPFLAGS) -c $<
%.o: %.f
	$(FC) $(PORTAUDIO_INCLUDE) $(FFLAGS) -c $<
%.o: %.F
	$(FC) $(PORTAUDIO_INCLUDE) $(FFLAGS) -c $<
%.o: %.f90
	$(FC) $(PORTAUDIO_INCLUDE) $(FFLAGS) -c $<
%.o: %.F90
	${FC} $(PORTAUDIO_INCLUDE) $(FFLAGS) -c $<

# ALL PyFMT Targets
all:	libfmt.a fmtest fmtave fcal fmeasure docs manp mkmsg

# libfmt object file
OBJS1 = audiodev.o db.o fil1.o four2a.o padevsub.o peakup.o sound.o 

# build libfmt.a
libfmt.a: $(OBJS1) acom1.f90 acom2.f90
	@echo
	@echo Build libfmt library
	@echo -----------------------------
	$(AR) cr libfmt.a $(OBJS1)
	ranlib libfmt.a

# buid fmtest
fmtest: fmtest.f90 libfmt.a
	@echo
	@echo Build Fmtest
	@echo --------------------
	$(FC) $(PORTAUDIO_LIBDIR) $(LDFLAGS) -o fmtest fmtest.f90 libfmt.a -lfftw3f -lportaudio

# build fmtave
fmtave: fmtave.f90
	@echo
	@echo Build Fmtave
	@echo --------------------
	$(FC) $(LDFLAGS) -o fmtave fmtave.f90

# build fcal
fcal: fcal.f90
	@echo
	@echo Build Fcal
	@echo --------------------
	$(FC) $(LDFLAGS) -o fcal fcal.f90

# build fmeasure
fmeasure: fmeasure.f90
	@echo
	@echo Build Fmeasure
	@echo --------------------
	$(FC) $(LDFLAGS) -o fmeasure fmeasure.f90

# build user guide
docs:
ifeq ($(BDOC),Yes)
	@echo
	@echo Build User Guide
	@echo ----------------
	@echo "Building pyfmt-main-$(VERSION).html"
	@$(ASCIIDOCTOR) -a data-uri \
	-a toc=left \
	-a max-width=1024px \
	--out-file=$(DOCPATH)/pyfmt-main-$(VERSION).html $(DOCPATH)/user_guide/pyfmt-main.adoc
endif

# build manpages
manp:
ifeq ($(BMANP),Yes)
	@echo
	@echo Build Manpages
	@echo --------------
	@for f in $(MANPSRC) ; do \
	echo "Building $$f" ; \
	$(ASCIIDOCTOR) -b manpage $$f ; \
	done
endif

# Phony non-file targets
.PHONY: install uninstall mkmsg help clean distclean

# make summary message
mkmsg:
	@echo ''
	@echo '---------------------------------------------'
	@echo "$(PROGRAM) Make Summary"
	@echo '---------------------------------------------'
	@echo ''
	@echo 'PACKAGE'
	@echo "  Version .........: $(VERSION)"
	@echo "  Install prefix ..: $(PREFIX)"
	@echo "  Rig Control .....: $(RIGCTL)"
ifeq ($(BDOC),Yes)
	@echo "  With HTML Docs ..: $(BDOC)"
endif
ifeq ($(BMANP),Yes)
	@echo "  With Manpages ...: $(BMANP)"
endif
	@echo ''
	@echo 'INSTALL'
	@echo '  System Install ..: sudo make install'
	@echo "  Test Install ....: make DESTDIR=/home/@LOGNAME@/PyFMT install"
	@echo ''

help:
	@echo ''
	@echo '---------------------------------------------'
	@echo "$(PROGRAM) Target Summary"
	@echo '---------------------------------------------'
	@echo ''
	@echo 'The following targets are available'
	@echo '------------------------------------'
	@echo '* help ......: prints this message'
	@echo '* libfmt.a ..: main fmt library'
	@echo '* fmtest ....: main measuring application'
	@echo '* fmtave ....: averages data found in fmt.all'
	@echo '* fcal ......: calculates a best-fit straight line for data'
	@echo '* fmeasure ..: calculates the properly calibrated frequency'
ifeq ($(BDOC),Yes)
	@echo "* doc .......: build html documentation"
endif
ifeq ($(BMANP),Yes)
	@echo "* manp ......: builds manpages"
endif
	@echo ''

# install pyfmt
install:
	@echo
	@echo "INSTALLING $(PROGRAM) $(VERSION)"
	@echo '-----------------------------------'
	@$(MKDIR) $(DESTDIR)$(BINDIR)
	@$(MKDIR) $(DESTDIR)$(SHARED)
	@$(MKDIR) $(DESTDIR)$(MANDIR)
	@$(MKDIR) $(DESTDIR)$(DOCDIR)/examples
	@$(MKDIR) $(DESTDIR)$(PYFMTLIB)
	@$(MKDIR) ${DESTDIR}$(PREFIX)/share/applications
	@$(MKDIR) ${DESTDIR}$(PREFIX)/share/pixmaps
	@echo ' * Installing Binaries and Scripts'
	@$(INSTALL) -m 755 -s fmtest fcal fmeasure fmtave $(DESTDIR)$(BINDIR)
	@$(INSTALL) -m 755 pyfmt $(DESTDIR)$(BINDIR)
	@$(INSTALL) -m 644 data/pyfmt.desktop $(DESTDIR)$(PREFIX)/share/applications/
	@$(INSTALL) -m 644 data/pyfmt.xpm $(DESTDIR)$(PREFIX)/share/pixmaps/
	@echo ' * Installing Python Files'
	@$(INSTALL) -m 644 data/hamlib_rig_numbers data/pyfmtrc.nix data/gocal $(DESTDIR)$(SHARED)/
	@$(INSTALL) -m 755 modfmt/*init*.py modfmt/fmt*.py modfmt/user*.py \
	modfmt/*version.py modfmt/README* $(DESTDIR)$(PYFMTLIB)
ifeq ($(PMW3),Yes)
	@install -m 755 modfmt/Pmw*.py $(DESTDIR)$(PYFMTLIB)
endif
	@echo ' * Installing Misc Items'
	@$(INSTALL) -m 644 doc/examples/* $(DESTDIR)$(DOCDIR)/examples/
ifeq ($(BDOC),Yes)
	@echo ' * Installing User Guide'
	@install -m 644 $(DOCPATH)/pyfmt-main-$(VERSION).html ${DESTDIR}$(DOCDIR)/
endif
ifeq ($(BMANP),Yes)
	@echo ' * Installing Manpages'
	@install -m 644 manpages/*.1 ${DESTDIR}$(MANDIR)
endif
	@echo
	@echo "TO RUN $(PROGRAM) $(VERSION):"
	@echo "  Type ..........: pyfmt"
	@echo "  Help Options ..: pyfmt -h"
	@echo ''

# Uninstall system files
uninstall:
	@clear
	@echo '--------------------------------------'
	@echo " Uninstalling @PROGRAM@"
	@echo '--------------------------------------'
	$(RM) -rf ${DESTDIR}$(PREFIX)/share/pyfmt/*
	$(RM) -r ${DESTDIR}$(PREFIX)/bin/{fmtest,fcal,fmeasure,fmtave,pyfmt}
	$(RM) -rf ${DESTDIR}${PREFIX}/lib/pyfmt/*
	$(RM) -rf ${DESTDIR}$(PREFIX)/share/doc/pyfmt
	$(RM) -f ${DESTDIR}$(PREFIX)/share/man/man1/{fmtest.1,fmtave.1,fmeasure.1,fcal.1}
	$(RM) -f ${DESTDIR}$(PREFIX)/share/applications/pyfmt.desktop
	$(RM) -f ${DESTDIR}$(PREFIX)/share/pixmaps/pyfmt.xpm
	@echo ''
	@echo "* Finished"
	@echo "* User generated files *do not* get removed"
	@echo ''

# Cleanup Source Tree
clean :
	$(RM) -f *.o libfmt.a data/pyfmt.desktop ./modfmt/*.pyc ./modfmt/*.pyo
	$(RM) -f ./{fmtest,fmtave,fcal,fmeasure,pyfmt}
ifeq ($(BDOC),Yes)
	$(RM) -f doc/pyfmt*.html
endif
ifeq ($(BMANP),Yes)
	$(RM) -f ./manpages/{fmtest.1,fmtave.1,fmeasure.1,fcal.1}
endif

# Clean source, autotool, fmt and Python files
distclean: clean
	$(RM) -f config.log config.status audio_caps autoscan.log configure.scan \
	fmt.ini fmt.all fmt.dat fcal.plt fmtave.out fmtave.out fmt.out fcal.out \
	pixmap.dat Makefile manpages/*.txt doc/pyfmt.conf
	$(RM) -rf ./autom4* ./modfmt/__pycache__ ./dist

