# Makefile for Linux
# Re-direct stdout and stderr:	bash
#				make >& junk
# Prerequisites: Python 3.x, numpy-1.8.1, PIL, Pmw-2.0.0+

# Program Infomation
PROGRAM		:=	@PROGRAM@
VERSION		:=	@VERSION@
BUGS		:=	@BUGS@
WEB		:=	@WEB@

# System Information
OS		:=	@OS@
CPU		:=	@CPU@

# General Information
AR		:=	@AR@
CP		:=	@CP@
LN		:=	@LN@
MV		:=	@MV@
RM		:=	@RM@
CHOWN		:=	@CHOWN@
CHMOD		:=	@CHMOD@
SHELL		:=	@SHELL@
MKDIR		:=	@MKDIR@

# Install locations
USER		:=	@USER@
INATALL		:=	install
HOMEDIR		:=	@HOMEDIR@
BINDIR		:=	@BINDIR@
SHARED		:=	@SHARED@
DOCDIR		:=	@DOCDIR@
MANDIR		:=	@MANDIR@

# Compiler Information
CC		:=	@CC@
FC		:=	@FC@
FCV		:=	@FCV@
FC_LIB_PATH	+=	@FC_LIB_PATH@

# Python Information
PYTHON		:=	@PYTHON@
F2PY		:=	@F2PY@

# Libs and Flags
LIBS		:=	@LIBS@
CPPFLAGS	+=	${DEFS}
LDFLAGS		+=	@LDFLAGS@
CFLAGS		+=	@CFLAGS@
FFLAGS		+=	@FFLAGS@
FCOPT		+=	@FCOPT@

# Config Definitions
DEFS		:=	@DEFS@

# WSPR Targets
all:	libwspr.a thnix.o WsprMod/w.so fmtest fmtave fcal fmeasure wsprcode wspr0
	@echo ''
	@echo '---------------------------------------------'
	@echo " ${PROGRAM} ${VERSION} Make Summary"
	@echo '---------------------------------------------'
	@echo ''	
	@echo ' To Install, type .....: sudo make install'
	@echo ' Then, type, ..........: wspr'
	@echo ''
	@echo ' Clean & Rebuild'
	@echo ' To Clean, type .......: make clean'
	@echo ' To Dist Clean, type ..: make distclean'
	@echo ''

# Default Rules
%.o: %.c
	${CC} ${CPPFLAGS} ${CFLAGS} -c $<
%.o: %.f
	${FC} ${FFLAGS} -c $<
%.o: %.F
	${FC} ${FFLAGS} -c $<
%.o: %.f90
	${FC} ${FFLAGS} -c $<
%.o: %.F90
	${FC} ${FFLAGS} -c $<

# Objects
OBJS1 = wspr0.o wspr0init.o wspr0_rx.o wspr0_tx.o thnix_stub.o

wspr0:  ${OBJS1}
	${FC} ${FFLAGS} -o wspr0 ${FFLAGS} ${OBJS1} libwspr.a -lfftw3f -lportaudio

wsprcode: wsprcode.o thnix_stub.o
	${FC} ${FFLAGS} -o wsprcode wsprcode.o thnix_stub.o libwspr.a -pthread

OBJS3 = azdist.o ccf2.o chklevel.o db.o decode.o decode162.o deg2grid.o \
	encode232.o fano232.o fchisq.o fil1.o flat3.o four2a.o\
	fthread.o gencwid.o genmept.o genwspr.o geodist.o getrms.o getutc.o \
	gmtime2.o gran.o grid2deg.o hash.o inter_mept.o iqdemod.o \
	mept162.o mix162.o morse.o msgtrim.o nchar.o nhash.o pack50.o \
	packcall.o packgrid.o packname.o packpfx.o packprop.o packtext2.o \
	padevsub.o pctile.o peakup.o phasetx.o ps162.o ptt_unix.o rx.o \
	rxtxcoord.o set.o sort.o sound.o spec162.o speciq.o ssort.o \
	start_threads.o startdec.o startrx.o starttx.o sync162.o \
	twkfreq.o tx.o unpack50.o unpackcall.o unpackgrid.o \
	unpackname.o unpackpfx.o unpackprop.o unpacktext2.o wfile5.o \
	wqdecode.o wqencode.o wspr2.o xcor162.o xfft.o 

# Build Library: libwspr.a
libwspr.a: ${OBJS3} acom1.f90 acom2.f90
	${AR} cr libwspr.a ${OBJS3}
	ranlib libwspr.a

# Build FMT Applications
fmtest: fmtest.f90 libwspr.a
	${FC} ${FFLAGS} -o fmtest fmtest.f90 libwspr.a -lfftw3f -lportaudio

fmtave: fmtave.f90
	${FC} ${FFLAGS} -o fmtave fmtave.f90

fcal: fcal.f90
	${FC} ${FFLAGS} -o fcal fcal.f90

fmeasure: fmeasure.f90
	${FC} ${FFLAGS} -o fmeasure fmeasure.f90

# SRC for w.so
F2PYSRCS = wspr1.f90 getfile.f90 paterminate.f90 audiodev.f90

# Build W.SO & MV to WsprMod/
WsprMod/w.so:	libwspr.a ${F2PYSRCS} acom1.f90 
	${F2PY} -c --quiet --fcompiler=${FCV} --f77exec=${FC} --f90exec=${FC} \
	--opt="${FCOPT}" thnix.o ${LIBS} libwspr.a -m w ${F2PYSRCS}
	${MV} w*.so WsprMod/w.so

# Install target wspr
install:
	@clear
	@echo '-----------------------------------'
	@echo "      Installing ${PROGRAM}"
	@echo '-----------------------------------'
	@echo ''
	@${MKDIR} -p ${DOCDIR}/examples
	@${MKDIR} -p ${SHARED}/{save/Samples,WsprMod}
	@install -m 755 --strip fmtest fcal fmeasure fmtave wspr0 wsprcode ${BINDIR}
	@install -m 644 manpages/man1/*.1 ${MANDIR}
	@install -m 644 doc/WSPR0_Instructions.TXT doc/WSPR_4.0_User.docx ${DOCDIR}
	@install -m 644 save/Samples/* ${SHARED}/save/Samples/
	@install -m 755 ./{gocal,Pmw*.py,tkrep.py,wspr.py,wspr.sh} ${SHARED}
	@install -m 644 ./{AUTHORS,README,INSTALL.txt,NEWS,BUGS} ${DOCDIR} 
	@install -m 644 ./hamlib_rig* ${SHARED}
	@install -m 755 WsprMod/* ${SHARED}/WsprMod/
	@${LN} -sf ${SHARED}/wspr.sh ${BINDIR}/wspr
	@${CP} -r doc/examples/* ${DOCDIR}/examples/
	@${CHMOD} -R 644 ${DOCDIR}/examples/*
	@echo "Finished Installing ${PROGRAM}"
	@echo ''
	@echo '..To run, type..: wspr'
	@echo ''
	@echo "..Website ......: ${WEB}"
	@echo "..Report Bugs ..: ${BUGS}"
	@echo ''

# Uninstall system files
uninstall:
	@clear
	@echo '--------------------------------------'
	@echo "       Uninstalling ${PROGRAM}"
	@echo '--------------------------------------'
	@echo '.. Removing Installed files'
	@echo ''
	@${RM} -r /usr/share/wspr
	@${RM} -f ${BINDIR}/{fmtest,fcal,fmeasure,fmtave,wspr0,wsprcode,wspr}
	@${RM} -f ${MANDIR}/{wspr.1,wspr0.1*,fmtest.1*,fmtave.1*,fmeasure.1*,fcal.1*}
	@${RM} -f ${HOMEDIR}/{fmtest,fcal,fmeasure,fmtave,wspr0,wsprcode}
	@${RM} -rf ${HOMEDIR}/{WsprMod/,save/,doc/,*.py,hamlib*,*.sh,*.dat,gocal,*cache*}
	@${RM} -f ${HOMEDIR}/{AUTHORS,README,INSTALL.txt,NEWS,BUGS}
	@echo '' 
	@echo ".. User files remain in: ${HOMEDIR}"
	@echo ".. To remove, type ....: rm -R ${HOMEDIR}"
	@echo ''

# Cleanup Source Tree
.PHONY: clean distclean dist
clean :
	${RM} -f *.o libwspr.a *.pyc *.pyo WsprMod/*.pyc WsprMod/*.pyo \
	WsprMod/w.so WsprMod/*.so w.so *~ wsprcode wspr0 fmtest fmtave fcal \
	fmeasure

distclean: clean
	${RM} -f config.log config.status ALL_WSPR*.TXT WSPR.INI \
	audio_caps autoscan.log configure.scan decoded.txt hopping.ini \
	fmt.ini fmt.all fmt.dat fcal.plt fmtave.out fmtave.out fmt.out fcal.out \
	pixmap.dat wspr.log configure Makefile
	${RM} -rf ./autom4* WsprMod/__pycache__ ./dist

dist: distclean
	${SHELL} ./wspr-dist.sh @PROGRAM@ @VERSION@
