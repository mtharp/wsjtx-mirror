#!/usr/bin/env bash
#-------------------------------------------------------------------------------
# This file is part of the PyFMT application
#
# File Name:    pyfmt
# Description:  Shell script wrapper to run PyFMT
# 
# Copyright (C) 2001-2016 Joseph Taylor, K1JT
# License: GNU GPL v3
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
# Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
#-------------------------------------------------------------------------------

# Run Multiple Instances:
# Using the -n [NAME] option at start-up allows the user to create / use
# multiple instances of PyFMT. Using this option creates separate directories
# for each name, example: [ pyfmt -n ft-1000mp ]  and [ pyfmt -n ts-2000 ] would
# create the following:
#
# ~/.local/share/ft-1000mp
# ~/.local.share/ts-2000
#
# Using the [-p PATH] options allows the user to specify the folder location,
# [ pyfmt -n ft-1000mp -p $HOME/Desktop ]  and [ pyfmt -n ts-2000 -p $HOME/Desktop ]
# would create:
#
# ~/Desktop/ft-1000mp
# ~/Desktop/ts-2000
#
# 
# All folders are completely isolated and include:
# -- Call and Grid
# -- Rig Control (CAT)
# -- pyfmt.ini
# -- fmt.ini
# -- fmt.all
# -- fmtave.out
# -- fcal.out
# -- fmeasure.out
#

# exit on errors
set -e -u

# make sure we are not sudo
sudo -k > /dev/null 2>&1

# foreground colours
C_R='\033[01;31m'		# red
C_G='\033[01;32m'		# green
C_Y='\033[01;33m'		# yellow
C_C='\033[01;36m'		# cyan
C_NC='\033[01;37m'		# no color

# local user directories for pyfmt.desktop and icon files
SHARED=@SHARED@
PREFIX=@PREFIX@
APPD="$HOME/.local/share/applications"
ICOND="$HOME/.local/share/icons"
DTG=$(date -u)
VERSION=@VERSION@

################################################################################
# FUNCTIONS
################################################################################
cli_help() {
clear ||:
echo '--------------------------------------------'
echo -e ${C_G}" COMMAND LINE OPTIONS"${C_NC}
echo '--------------------------------------------'
echo ''
cat <<EOF
 To run multiple instances of PyFMT, use
 the [-n] operator. To designate a custom
 runtime location use the [-p] operator.

 Usage ....: pyfmt [-h] [-n] [-p]
 Example ..: pyfmt -n ft1000mp -p $HOME/Desktop

 OPTIONS:
	-h	displays this help message

	-n	Sets the runtime folder name [ -n NAME ] 
		Default folder name is ..: PyFMT

	-p	Sets the runtime folder path [ -p PATH ]
		Defualt is ..: $HOME/.local/share/PyFMT

 NOTES
  1. You must setup each instance separately.

  2. All callibration data, logs etc are separated by [-n NAME].

EOF

exit 0

}

################################################################################
# PROCESS COMMAND-LINE OPTIONS
################################################################################
set +u
while getopts "hn:p:" opt; do
	case $opt in
		# dispalay the help message
		h) cli_help ; exit 0 ;;
		
		# add user defined name		
		n)	N_OPT=$OPTARG ;;
		
		# add user defined path
		p) P_OPT=$OPTARG ;;
		'?')
			echo "Invalid Option" 1>&2
			read -rp " Press [ Enter ] to view the help message"
			cli_help
			exit 1
		;;
	esac
done
shift $((OPTIND -1))

# set folder name if -n [NAME] is used
if [ ! -z $N_OPT ] ; then
	N_NAME="$N_OPT"
fi

# set default folder name if -n [NAME] is not used
if [ -z $N_OPT ] ; then
	N_NAME="PyFMT"
fi

# set path if -p [PATH] is used
if [ ! -z $P_OPT ] ; then
	P_PATH="$P_OPT"
fi

# set default path if -p [PATH] is not used
if [ -z $P_OPT ] ; then
	P_PATH="$HOME/.local/share"
fi

# combine final runtime path
RUNDIR="$P_PATH/$N_NAME"
set -u

################################################################################
# START MAIN SCRIPT
################################################################################
# clear and run the script
clear ||:
echo '***************************************************'
echo " FMTest Version ..: @VERSION@, by K1JT"
echo " Date ............: $DTG"
echo " Instance Name ...: $N_NAME"
echo " Run Directory ...: $RUNDIR"
echo '***************************************************'
# set the paths to PyFMT package files
PATH=@RIGCTL@:$PATH:@PREFIX@/bin:@PREFIX@/lib/pyfmt:@PREFIX@/share/pyfmt ; export PATH

# make dirs and copy / update files
if [ ! -d "$RUNDIR" ] ; then mkdir -p "$RUNDIR" ; fi

# PyFMT needs these files in the run directory
cp -u "$SHARED"/{pyfmtrc.nix,hamlib_rig_numbers,gocal} "$RUNDIR"/

# add .desktop file for local users
if [ ! -d "$APPD" ] ; then mkdir -p "$APPD" ; fi
cp -u "$PREFIX"/share/applications/pyfmt.desktop "$APPD"/ 

# add pyfmt.xpm icon
if [ ! -d "$ICOND" ] ; then mkdir -p "$ICOND"/ ; fi
cp -u "$PREFIX"/share/pixmaps/pyfmt.xpm "$ICOND"/

# run paths are set by configure.ac, do not edit manually
cd "$RUNDIR"
env PYTHONPATH=@PYFMTLIB@ @PYTHON@ -O @PYFMTLIB@/fmtmain.py
