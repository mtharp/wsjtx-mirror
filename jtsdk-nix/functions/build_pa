#
# Part of the JTSDK-NIX Project
# Build Portaudio from Source

#--------------------------------pmw build-------------------------------------#

function build_pa() {

set -e

_PKG_NAME=portaudio
_FILE=pa_stable_v19
_URL="http://www.portaudio.com/archives/pa_stable_v19_20140130.tgz"
_MD5A="7f220406902af9dca009668e198cbd23"
_INSTALLD="$HOME/.local/share/applications/portaudio"
_INSTALL_MKR=$_MKRD/$_PKG_NAME/$PKG_NAME-install.mkr
_LOG=$BASED/logs/$_PKG_NAME-build.log

# test python3 version
cd "$_SRCD"

function download_pa(){
# Download Portaudio19-Dev
echo ".. downloading $_FILE from www.portaudio.com"
cd $_SRCD
wget -q -r --tries=5 $_URL -O $_SRCD/$_FILE

}

function unpack_pa(){
# unpack and install Portaudio19
echo ".. unpacking $_FILE"
cd $_SRCD
tar -xzvf $_FILE
cd $_SRCD/portaudio
}

function check_md5() {
# Run MD5SUM
if [[ -f $_SRCD/portaudio ]]; then
	_MD5B=$(md5sum $_SRCD/$_FILE |awk '{print $1}')
	echo ".. MD5A Checksum is: "$_MD5A
	echo ".. MD5B Checksum is: "$_MD5B
else
	clear
	echo
	echo "The Automated $_FILE Download .. FAILED"
	echo "In order to continue, you need to manually download"
	echo "$_FILE before continuing."
	echo
	echo "For Details, see $_LOGS/setup.log"
	echo
	echo "Actoiins to Take:"
	echo " [1] Download Portaudio:" $_URL
	echo " [2] Save to: $_SRCD"
	echo " [3] Re-Run setup.sh"
	echo
	echo "Setup will now exit."
	echo
	read -p "Press [Enter] to continue ..."
	clean_exit
fi

if [[ $_MD5B = $_MD5A ]]; then
	_MD5C=OK
echo ".. MD5SUM is ..." $_MD5C
	sleep 2
else
	echo "MD5A" $_MD5A
	echo "MD5B" $MD5B
	echo "Do No Match"
	echo "For Details, see $_LOG"
	echo
	echo "Actoiins to Take:"
	echo " [1] Download Portaudio:" $_URL
	echo " [2] Save to: $_SRCD"
	echo " [3] Re-Run setup.sh"
	echo
	echo "Setup will now exit."
	echo
	read -p "Press [Enter] to continue ..."
	clean_exit
fi
}

function build_source() {
	echo "-------------------------------------------"
	echo " Building Portaudio 19 Dev"
	echo "-------------------------------------------"
	echo
	mkdir -p $_SRCD/pa-build
	cd "$_SRCD"/pa-build
	echo ".. Starting Configure Process"
	echo
	"$_SRCD"/portaudio/configure --prefix="$_INSTALLD"
	echo
	echo ".. Configure Process Complete"
	echo ".. Starting Make Process"
	echo
	make -s -j$(grep -c ^processor /proc/cpuinfo)
	echo
	echo ".. Make Process Complete"
	echo ".. Installing Portaudio to:"
	echo ".. $_INSTALLD"
	make -s -j$(grep -c ^processor /proc/cpuinfo) && make install
	mkdir -p $_MKRD/$_PKG_NAME
	touch $_MKRD/$_PKG_NAME/$_PKG_NAME-install.mk
	
}

# post build test-1 (file check)
function post_build_test() {
	echo
	echo ".. performaing file check"
	rm -rf $_TMP/counter && touch $_TMP/counter

	# check that files exist at least
	while read f; do
		if [[ -f $_INSTALLD/$f ]]; then
			echo .. $f ... OK
			echo $f >> $_TMP/counter
		else
			echo $f is ... MISSING
		fi
	done < $_CFG/pkg_list_pa

	# get counter info
	_LINES=$(wc -l < "$_TMP/counter")
	if [[ $_LINES -ge "7" ]]; then
		echo
		echo "All Critical Files Found"
		echo
		read -p "Press [Enter] to continue .."
	else
		echo
		echo "Something went wrong with the build."
		echo "The build script will exit. Check the"
		echo "build log to investigate possible cause."
		echo
		echo "Log: $_LOGS/$_PKG_NAME-build.log"
		echo 
		read -p "Press [Enter] to continue ..."
	fi
}
# START MAIN 
if [[ -f $_LOG ]]; then
	mv $_LOG $_LOG-$(date +"%Y%m%d%H%M")
	touch $_LOG
else
	touch $_LOG
fi
cd $_SRCD

# configure portaudio
if [[ -d $_SRCD/pa-build ]] && [[ -f $_INSTALLD/include/portaudio.h ]]; then
	while [ 1 ]
	do
		echo
		read -p "Portaudio Seems Ok, Perform Complete Rebuild? [ Y/N ]:" yn
				case $yn in
		[Yy]* )
			echo
			cd $_SRCD/pa-build
			echo ".. cleaning source tree"
			make clean && make distclean
			build_source
			echo
			echo '---------------------------'	
			echo "Performing Post Build Check"
			echo '---------------------------'
			post_build_test
			break ;;
		[Nn]* )
			echo			
			break ;;
		* )
			clear
			echo "Please use "Y" yes or "N" No."
		;;
		esac
	done

else
	echo
	echo '---------------------------'	
	echo "Performing Post Build Check"
	echo '---------------------------'
	download_pa
	unpack_pa
	check_md5
	build_source
	post_build_test
fi

}
