#
# Part of the JTSDK-NIX Project
# Custom Hamlib Build from Bill (G3WJS) Fork

#------------------------------hamlib build------------------------------------#

function build_hamlib() {

local _GITV=$(dpkg --get-selections |grep git |awk 'FNR==1 {print $2}')
local _HAMLIBURL="git://git.code.sf.net/u/bsomervi/hamlib"
local _INSTALLD="$HOME/.local/share/applications/hamlib"
_LOG=$BASED/logs/hamlib-build.log

# checking for git
	clear
	echo "Checking Git .."
if [[ $_GITV == "install" ]]; then
	echo "Found Git .. OK"

else
	echo
	echo "GIT ERROR"
	echo
	echo "Git was not found, please check your installation"
	echo "and ensure Git can be used from ( $USER ) account"
	echo
	read -p "Press [Enter] continue .."
	echo
	clean_exit
fi

echo "Starting Hamlib Build" > $_LOG
echo "--------------------------------------------------------------------------" > $_LOG
echo  > $_LOG

# start build log
(
# Bills (G4WJS) Git Fork
	if [[ -f $_LOG ]]; then
		mv $_LOG $_LOG-$(date +"%Y%m%d%H%M")
		touch $_LOG
	else
		touch $_LOG
	fi

	cd "$_SRCD"
	clear
	echo
	echo "BUILDING ( Hamlib )"

	# clone or update hamlib
	if [[ ! -d $_SRCD/g4wjs-hamlib ]]; then
		echo
		echo "Cloning G3WJS's Hamlib"
		git clone "$_HAMLIBURL" g4wjs-hamlib
	
		# checkout integration
		echo "Checkout out integration .. "	
		cd g4wjs-hamlib
		git checkout integration

	else
		cd $_SRCD/g4wjs-hamlib
		echo "Updating Previous Hamlib Clone"	
		git pull
	fi

	# configure hamlib
	if [[ -d $_SRCD/build/hamlib ]]; then
		cd "$_SRCD"/build/hamlib
		make -s clean
		"$_SRCD"/g4wjs-hamlib/autogen.sh --prefix="$_INSTALLD" --disable-winradio --disable-shared
		make -s -j$(grep -c ^processor /proc/cpuinfo)
		make -s install
		sleep 1
	else
		mkdir -p "$_SRCD"/build/hamlib
		cd "$_SRCD"/build/hamlib
		"$_SRCD"/g4wjs-hamlib/autogen.sh --prefix="$_INSTALLD" --disable-winradio --disable-shared
		make -s -j$(grep -c ^processor /proc/cpuinfo)
		make -s install
		sleep 1
	fi

	echo
	echo "Performing Post Build Check"
	echo
	rm -rf $_TMP/counter && touch $_TMP/counter

	# check thaat files exist at least
	while read f; do
		if [[ -f $_INSTALLD/$f ]]; then
			echo $f is ... OK
			echo $f >> $_TMP/counter
		else
			echo $f is ... MISSING
		fi
	done < $_CFG/pkg_list_hamlib

) 2>&1 | tee -a $_LOG # end build log

	# get counter info
	_LINES=$(wc -l < "$_TMP/counter")
	if [[ $_LINES -ge "18" ]]; then
		echo
		echo "All Critical Files Found"
		echo "To Review the build log, see:"
		echo
		echo $BASED/logs/hamlib-build.log
		echo
		echo "Finished Building Hamlib"
		echo
		read -p "Press [Enter] to continue .."
	else
		echo
		echo "Something went wrong with the build."
		echo "The build script will exit. Check the"
		echo "build log,. located in:"
		echo
		echo $BASED/logs/hamlib-build.log
		echo 
		echo "to investigate the cause."
		echo
		read -p "Press [Enter] to continue ..."
		clean_exit
	fi
}
