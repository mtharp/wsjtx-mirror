# Makefile for Windows JTSDK-PY: Python3, F2PY, MinGW, gcc and gfortran

# Re-direct stdout and stderr:     cmd.exe              bash
#                              make > junk 2>&1      make &> junk

# Application Information
NAME = WSPR
VER = 4.0
OS = Win32
SDK = C:/JTSDK-PY

# Tool & Chain
AR = $(SDK)/mingw32/bin/ar.exe
CC = $(SDK)/mingw32/bin/gcc.exe
FC = $(SDK)/mingw32/bin/gfortran.exe
RANLIB = $(SDK)/mingw32/bin/ranlib.exe

# Fortran libs
FLIBS = $(SDK)/mingw32/bin/libgfortran-3.dll $(SDK)/mingw32/bin/libquadmath-0.dll

# Misc Tools & Files
CP = $(SDK)/tools/cp.exe
MV = $(SDK)/tools/mv.exe
RM = $(SDK)/tools/rm.exe
ISCC = $(SDK)/inno5/ISCC.exe
ISS = $(SDK)/src/wspr/wspr4a.iss
MSVCR = $(SDK)/Python33/DLLs/msvcr100.dll

# Output Paths
INSTALLDIR = $(SDK)/wspr/install
PACKAGEDIR = $(SDK)/wspr/package

# Python Paths
PYTHON = $(SDK)/Python33/python.exe
F2PY = $(PYTHON) $(SDK)/Python33/Scripts/f2py.py
CXFR = $(PYTHON) $(SDK)/Python33/Scripts/cxfreeze.py

# Compiler Flags
FFLAGS = -O2 -fbounds-check -fno-second-underscore -Wall -Wno-conversion \
	-Wno-character-truncation
CFLAGS = -I. -DWIN32 -DWin32 -DBIGSYM -DHAVE_STRUCT_TIMESPEC

# Default rules
%.o: %.c
	$(CC) $(CFLAGS) -c $<
%.o: %.f
	$(FC) $(FFLAGS) -c $<
%.o: %.F
	$(FC) $(FFLAGS) -c $<
%.o: %.f90
	$(FC) $(FFLAGS) -c $<
%.o: %.F90
	$(FC) $(FFLAGS) -c $<

# Build Targets
all:	libwspr.a fmtest.exe fmtave.exe fcal.exe fmeasure.exe \
	WSPRcode.exe wspr0.exe WsprMod/w.pyd install

# Build OBJ1 for wspr0.exe
OBJS1 = wspr0.o wspr0_tx.o sound.o ptt.o gmtime2.o wfile5.o \
	cs_stubs.o genmept.o wqencode.o wqdecode.o inter_mept.o \
	encode232.o gran.o packcall.o packgrid.o pack50.o packpfx.o \
	hash.o unpackcall.o unpackgrid.o unpackpfx.o unpack50.o \
	grid2deg.o deg2grid.o nhash.o nchar.o wspr0_rx.o getrms.o \
	mept162.o mix162.o spec162.o sync162.o twkfreq.o \
	decode162.o getutc.o set.o xfft.o four2a.o flat3.o ps162.o \
	pctile.o fchisq.o db.o fano232.o sort.o ssort.o ccf2.o \
	wspr0init.o

# Build WPSR0 Command Line WSPR
wspr0.exe: $(OBJS1)
	$(FC) $(FFLAGS) -o wspr0 $(FFLAGS) $(OBJS1) libportaudio.a \
	libwinmm.a libfftw3f_win.a

# Build OBJ2 for WSPRcode.exe
OBJS2 = wsprcode.o deg2grid.o pack50.o packcall.o packgrid.o \
	unpack50.o unpackcall.o unpackgrid.o nchar.o \
	grid2deg.o wqencode.o wqdecode.o nhash.o hash.o \
	packname.o unpackname.o packtext2.o unpacktext2.o \
	encode232.o inter_mept.o packprop.o unpackprop.o \
	packpfx.o unpackpfx.o cs_stubs.o fano232.o

# Build WSPR Code example program
WSPRcode.exe: $(OBJS2)
	$(FC) $(FFLAGS) -o WSPRcode.exe $(OBJS2)

# Build OBJ3 for libwspr.a
OBJS3 = azdist.o ccf2.o chklevel.o db.o decode.o decode162.o deg2grid.o \
	encode232.o fano232.o fchisq.o fil1.o flat3.o four2a.o\
	fthread.o gencwid.o genwspr.o geodist.o getrms.o getutc.o \
	gmtime2.o gran.o grid2deg.o hash.o inter_mept.o iqdemod.o \
	mept162.o mix162.o morse.o msgtrim.o nchar.o nhash.o pack50.o \
	packcall.o packgrid.o packname.o packpfx.o packprop.o packtext2.o \
	padevsub.o pctile.o peakup.o phasetx.o ps162.o ptt.o rx.o \
	rxtxcoord.o set.o sort.o sound.o spec162.o speciq.o ssort.o \
	start_threads.o startdec.o startrx.o starttx.o sync162.o \
	thnix.o twkfreq.o tx.o unpack50.o unpackcall.o unpackgrid.o \
	unpackname.o unpackpfx.o unpackprop.o unpacktext2.o wfile5.o \
	wqdecode.o wqencode.o wspr2.o xcor162.o xfft.o 

# Build the library libwspr.a
libwspr.a: $(OBJS3) acom1.f90 acom2.f90
	$(AR) cr libwspr.a $(OBJS3)
	$(RANLIB) libwspr.a

# Build fmtest.exe
fmtest.exe: fmtest.f90 libwspr.a
	$(FC) $(FFLAGS) -o fmtest.exe fmtest.f90 $(OBJS3) libwspr.a libportaudio.a \
	libwinmm.a libfftw3f_win.a libpthreadGC2.a

# Build fmtave.exe
fmtave.exe: fmtave.f90
	$(FC) $(FFLAGS) -o fmtave.exe fmtave.f90

# Build fcal.exe
fcal.exe: fcal.f90
	$(FC) $(FFLAGS) -o fcal.exe fcal.f90

# Build fmeasure.exe
fmeasure.exe: fmeasure.f90
	$(FC) $(FFLAGS) -o fmeasure.exe fmeasure.f90

# Build sound.o
sound.o: sound.c
	$(CC) -c sound.c

# Build gmtime2.o
gmtime2.o: gmtime2.c
	$(CC) $(CFLAGS) -c gmtime2.c

# WSPR Audio w.pyd SRC
F2PYSRC = wspr1.f90 getfile.f90 paterminate.f90 ftn_quit.f90 audiodev.f90

# Build WSPR Audio w.pyd
WsprMod/w.pyd: libwspr.a $(F2PYSRC)
	$(F2PY) -c -I. \
	--quiet --fcompiler=gnu95 --compiler=mingw32 \
	--f77exec=gfortran --f90exec=gfortran \
	--opt="-cpp -fbounds-check -O2" \
	libwspr.a libportaudio.a libfftw3f_win.a libsamplerate.a \
	libpthreadGC2.a -lwinmm -m w $(F2PYSRC)
	$(MV) w.pyd WsprMod/w.pyd

# Run CX_Freeze to install WSPR to $(INSTALLDIR)
# CX_Freeze creates the $(INSTALLDIR) if not present.
install:
	$(CXFR) --silent --icon=wsjt.ico --include-path=. \
	--include-modules=Pmw wspr.py --target-dir=$(INSTALLDIR)\bin
	$(RM) -rf $(INSTALLDIR)/bin/tcl/tzdata
	$(RM) -rf $(INSTALLDIR)/bin/tk/demos
	$(CP) -u wsjt.ico wsprrc.win hamlib_rig_numbers wspr.bat \
	fcal.exe fmeasure.exe fmtest.exe fmtave.exe WSPRcode.exe \
	wspr0.exe fmt-env.bat gocal.bat AUTHORS BUGS COPYING \
	INSTALL.txt NEWS README THANKS $(INSTALLDIR)
	$(CP) -ur save WsprMod hamlib/* $(INSTALLDIR)
	$(CP) -u $(FLIBS) $(MSVCR) $(INSTALLDIR)/bin

# /O = Installer output directory
# /F = Win32 output file name
# /cc = Compiler command
# $(ISS) = .iss file name
# The other vars are from the top of the Makefile.
# Output: $(SDK)\wspr\package\WSPR-4.0-Win32.exe
# Optional: Super Quiet, with errors only, add "/Q[p]" before /O
# ISCC creates $(PACKAGEDIR) if not present.
package:
	$(ISCC) "/Q[p]" /O"$(PACKAGEDIR)" /F"$(NAME)-$(VER)-$(OS)" /cc $(ISS)

.PHONY : list-targets clean distclean
list-targets:
	@cls
	@echo --------------------------------------
	@echo  $(NAME) Build Targets
	@echo --------------------------------------
	@echo. 
	@echo  libwspr.a  ..... WPSR Library
	@echo  fmtest.exe ..... FMTest App
	@echo  fmtave.exe ..... Ave app for FMTest
	@echo  fcal.exe ....... Cal app for FMTest
	@echo  fmeasure.exe ... Measure app for FMTest
	@echo  souncd.o ....... Compile sounce.c
	@echo  gettime.o ...... COmpile gettime.c
	@echo  WSPRcode.exe ... WSPR code testing App
	@echo  wspr0.exe  ..... Command Line WSPR
	@echo  WsprMod/w.pyd .. Audio Library for WSPR
	@echo. install ........ Build and Install WSPR
	@echo  package ........ Build Win32 Installer
	@echo. 
	@echo  At the prompt, type:
	@echo  make -f Makefile.jtsdk ^<target-name^>
	@echo.

clean:
	$(RM) -rf *.o libwspr.a wspr.exe fmtest.exe fmtave.exe fcal.exe \
	fmeasure.exe WSPRcode.exe wspr0.exe WsprMod/w.pyd

distclean: clean
	$(RM) -rf $(INSTALLDIR) $(PACKAGEDIR)
