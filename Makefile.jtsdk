# Makefile for Windows JTSDK-PY: Python3, F2PY, MinGW, gcc and gfortran

# Re-direct stdout and stderr:     cmd.exe              bash
#                              make > junk 2>&1      make &> junk

# Note: Update SVN number for release version.
NAME = WSJT
VER = 10
OS = Win32

# Tool & Installer Related Paths
CC = C:/JTSDK-PY/mingw32/bin/gcc.exe
FC = C:/JTSDK-PY/mingw32/bin/gfortran.exe
MKD = C:/JTSDK-PY/tools/mkdir.exe
RMD = C:/JTSDK-PY/tools/rmdir.exe
RM = C:/JTSDK-PY/tools/rm.exe
CP = C:/JTSDK-PY/tools/cp.exe
ISCC = C:/JTSDK-PY/inno5/ISCC.exe
ISS = C:/JTSDK-PY/src/trunk/wsjt10a.iss
INSTALLDIR = C:/JTSDK-PY/src/trunk/install
PACKAGEDIR = C:/JTSDK-PY/src/trunk/package

# Python Related Paths
PYTHON = C:/JTSDK-PY/Python33/python.exe
F2PY = $(PYTHON) C:/JTSDK-PY/Python33/Scripts/f2py.py
CXFR = $(PYTHON) C:/JTSDK-PY/Python33/Scripts/cxfreeze.py

# Compiler Flags
FFLAGS = -O2 -fbounds-check -fno-second-underscore -Wall -Wno-conversion \
	-Wno-character-truncation
CFLAGS = -I. -DWIN32 -DWin32 -DBIGSYM -DHAVE_STRUCT_TIMESPEC

# Default rules
%.o: %.c
	${CC} ${CFLAGS} -c $<
%.o: %.f
	${FC} ${FFLAGS} -c $<
%.o: %.F
	${FC} ${FFLAGS} -c $<
%.o: %.f90
	${FC} ${FFLAGS} -c $<
%.o: %.F90
	${FC} ${FFLAGS} -c $<

# WSJT Targets
all:	libjt.a jt65code.exe jt4code.exe WsjtMod/Audio.pyd install

# Build OBJ1 for libjt.a
OBJS1 =	a2d.o abc441.o alignmsg.o ana932.o analytic.o astro.o \
	avecho.o avemsg4.o avemsg65.o avemsg6m.o avesp2.o azdist.o \
	bzap.o chk441.o chkhist.o chkmsg.o coord.o db.o dcoord.o \
	decode1.o decode2.o decode3.o decode4.o decode65.o decode6m.o \
	decode_rs.o decodems.o deep4.o deep65.o deg2grid.o demod64a.o \
	detect.o dot.o dtrim.o echogen.o encode232.o encode4.o \
	encode65.o encode_rs.o entail.o extract.o extract4.o fano.o \
	fano232.o fil651.o fil652.o fil653.o fivehz.o flat1.o flat2.o \
	flatten.o foldms.o four2a.o fthread.o ftpeak65.o gen4.o \
	gen441.o gen65.o gen6m.o gencw.o gencwid.o geniscat.o genmet.o \
	genms.o gentone.o geocentric.o geodist.o get_fname.o getmet4.o \
	getpfx1.o getpfx2.o getsnr.o gran.o graycode.o grid2deg.o \
	grid2k.o hipass.o horizspec.o hscroll.o igray.o indexx.o \
	init_rs.o interleave4.o interleave63.o iscat.o jtaudio.o jtms.o \
	k2grid.o lenms.o limit.o longx.o lpf1.o makepings.o match.o \
	moon2.o moondop.o morse.o msdf.o msgtype.o mtdecode.o nchar.o \
	nhash.o packcall.o packgrid.o packmsg.o packpfx.o packtext.o \
	pctile.o peakup.o pfxdump.o ping.o pix2d.o pix2d65.o ps.o \
	ps4.o ptt.o resample.o rfile.o rfile2.o s2shape.o savedata.o \
	set.o setup65.o setupms.o short65.o slope.o smo.o smooth.o \
	sort.o spec2d.o spec2d65.o spec441.o spread.o ssort.o \
	start_threads.o stdecode.o sun.o symsync65.o sync.o sync4.o \
	sync65.o syncf0.o syncf1.o synciscat.o syncms.o synct.o \
	tab.o thnix.o tm2.o tmoonsub.o toxyz.o tweak1.o tweak2.o \
	unpackcall.o unpackgrid.o unpackmsg.o unpackpfx.o unpacktext.o \
	usleep.o wrapkarn.o wsjt1.o wsjt4.o wsjt65.o wsjtgen.o xcor.o \
	xcor4.o xfft.o xfft2.o 

# Build the library libjt.a
libjt.a: $(OBJS1)
	ar cr libjt.a $(OBJS1)
	ranlib libjt.a

# Build jtj5code.exe
OBJS2 = jt65code.o 
jt65code.exe: $(OBJS2) libjt.a
	$(FC) -o jt65code.exe $(OBJS2) libjt.a

# Build jt4code.exe
OBJS3 = jt4code.o 
jt4code.exe: $(OBJS3) libjt.a
	$(FC) -o jt4code.exe $(OBJS3) libjt.a

# Audio.pyd SRC
F2PYSRC = ftn_init.f90 ftn_quit.f90 audio_init.f90 spec.f90 \
	getfile.f90 azdist0.f90 astro0.f90 chkt0.f90

# Build Audio.pyd
WsjtMod/Audio.pyd: libjt.a $(F2PYSRC)
	$(F2PY) -c -I. \
	--quiet --fcompiler=gnu95 \
	--compiler=mingw32 --f77exec=gfortran \
	--f90exec=gfortran --opt="-cpp -fbounds-check -O2" \
	libjt.a libportaudio.a libfftw3f_win.a libsamplerate.a \
	libpthreadGC2.a -lwinmm -m Audio $(F2PYSRC)
	mv Audio.pyd WsjtMod/Audio.pyd

# Run CX_Freeze to build Audio.pyd and install WSJT. 
# NOTE: CX_Freeze creates the $(INSTALLDIR), so there is no need
# for an additional MKDIR command before invocation.
install:
	$(CXFR) --silent --icon=wsjt.ico --include-path=. \
	--include-modules=Pmw wsjt.py --target-dir=$(INSTALLDIR)/bin
	$(RM) -rf $(INSTALLDIR)/bin/tcl/tzdata
	$(RM) -rf $(INSTALLDIR)/bin/tk/demos
	$(CP) -r RxWav $(INSTALLDIR)
	$(CP) CALL3.TXT kvasd.dat kvasd.exe wsjt.ico wsjt.bat $(INSTALLDIR)

# /O = Installer output directory
# /F = .iss file name
# The other vars are from the top of the Makefile.
# Output: C:\JTSDK-PY\src\trunk\package\wsjt10-win32-r4255.exe
# Optional: Super Quiet w/Only errors, add "/Q[p]" before /O
package:
	$(RM) -rf $(PACKAGDIR)
	$(ISCC) /O"$(PACKAGEDIR)" /F"$(NAME)$(VER)-$(OS)" /cc $(ISS)

.PHONY : clean distclean

clean:
	$(RM) -rf libjt.a jt65code.exe jt4code.exe WsjtMod/Audio.pyd *.o

distclean: clean
	$(RM) -rf $(INSTALLDIR) $(PACKAGEDIR) ./JTSDK-PY	
